# DB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://database:5432/test?current_schema=public
quarkus.datasource.username: pguser
quarkus.datasource.password: changeit
quarkus.hibernate-orm.database.generation=drop-and-create

# Service
quarkus.application.name=legume

#OTel
quarkus.otel.exporter.otlp.traces.endpoint=http://otel-collector:4317
quarkus.otel.metrics.exporter=none
quarkus.datasource.jdbc.telemetry=true
quarkus.datasource.metrics.enabled=true

#micrometer
quarkus.micrometer.export.otlp.enabled=true
quarkus.micrometer.export.otlp.publish=true
quarkus.micrometer.export.otlp.default-registry=true
quarkus.micrometer.export.otlp.url=http://otel-collector:4318/v1/metrics

#Rest client
quarkus.rest-client."com.brunobat.micrometer.client.FooClient".url=http://localhost:8080
quarkus.rest-client."com.brunobat.micrometer.client.FooClient".scope=javax.inject.Singleton

# Logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false

# Container image
quarkus.container-image.build=true
quarkus.container-image.builder=docker
quarkus.container-image.group=raptorsun
quarkus.container-image.registry=docker.io
quarkus.container-image.push=false


# Kubernetes
quarkus.kubernetes.idempotent=true
quarkus.kubernetes.namespace=quarkus-demo

# Openshift
quarkus.openshift.idempotent=true
quarkus.openshift.namespace=quarkus-demo
quarkus.openshift.route.expose=true
quarkus.openshift.route.host=legume.apps.openshift-dev.nailedit.duckdns.org
quarkus.openshift.route.target-port=http